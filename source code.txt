
INPUT:


class Product:
    def __init__(self, product_id, name, quantity, reorder_level):
        self.product_id = product_id
        self.name = name
        self.quantity = quantity
        self.reorder_level = reorder_level

    def __str__(self):
        return f"ID: {self.product_id}, Name: {self.name}, Quantity: {self.quantity}, Reorder Level: {self.reorder_level}"

class Inventory:
    def __init__(self):
        self.products = {}

    def add_product(self, product):
        self.products[product.product_id] = product
        print(f"Added product: {product}")

    def view_inventory(self):
        print("\n--- Current Inventory ---")
        for product in self.products.values():
            print(product)

    def process_order(self, product_id, order_quantity):
        if product_id in self.products:
            product = self.products[product_id]
            if product.quantity >= order_quantity:
                product.quantity -= order_quantity
                print(f"Order processed: {order_quantity} units of {product.name}")
                self.check_reorder(product)
            else:
                print(f"Insufficient stock for {product.name}. Available: {product.quantity}")
        else:
            print("Product not found!")

    def check_reorder(self, product):
        if product.quantity <= product.reorder_level:
            print(f"Reorder Alert: {product.name} is below reorder level. Consider restocking.")

    def restock_product(self, product_id, restock_amount):
        if product_id in self.products:
            product = self.products[product_id]
            product.quantity += restock_amount
            print(f"Restocked {restock_amount} units of {product.name}")
        else:
            print("Product not found!")


# Sample execution
inventory = Inventory()

# Add products
inventory.add_product(Product(1, "Laptops", 20, 5))
inventory.add_product(Product(2, "Smartphones", 15, 3))
inventory.add_product(Product(3, "Headphones", 30, 10))

inventory.view_inventory()

# Process orders
inventory.process_order(1, 5)
inventory.process_order(2, 14)
inventory.process_order(3, 25)

inventory.view_inventory()

# Restock a product
inventory.restock_product(2, 10)
inventory.view_inventory()


OUTPUT:

Added product: ID: 1, Name: Laptops, Quantity: 20, Reorder Level: 5
Added product: ID: 2, Name: Smartphones, Quantity: 15, Reorder Level: 3
Added product: ID: 3, Name: Headphones, Quantity: 30, Reorder Level: 10

--- Current Inventory ---
ID: 1, Name: Laptops, Quantity: 20, Reorder Level: 5
ID: 2, Name: Smartphones, Quantity: 15, Reorder Level: 3
ID: 3, Name: Headphones, Quantity: 30, Reorder Level: 10

Order processed: 5 units of Laptops
Order processed: 14 units of Smartphones
Reorder Alert: Smartphones is below reorder level. Consider restocking.
Order processed: 25 units of Headphones

--- Current Inventory ---
ID: 1, Name: Laptops, Quantity: 15, Reorder Level: 5
ID: 2, Name: Smartphones, Quantity: 1, Reorder Level: 3
ID: 3, Name: Headphones, Quantity: 5, Reorder Level: 10

Restocked 10 units of Smartphones

--- Current Inventory ---
ID: 1, Name: Laptops, Quantity: 15, Reorder Level: 5
ID: 2, Name: Smartphones, Quantity: 11, Reorder Level: 3
ID: 3, Name: Headphones, Quantity: 5, Reorder Level: 10